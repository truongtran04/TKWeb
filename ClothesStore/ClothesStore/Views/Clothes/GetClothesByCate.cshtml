@model ClothesStore.Models.ViewModels.CategoryModels
@{
    ViewBag.Title = "GetClothesByCate";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

<style>
    /* Set the initial display of sizes div to hidden */
    .toggle-div {
        display: none;
    }
    /* Add transition effects */
    .hover-overlay {
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .card-body:hover .hover-overlay {
        opacity: 1;
    }
</style>
<script>
    function changeImageAndSizes(colorInput, clothesId) {
        // Update the main image based on the selected color
        const newImageSrc = colorInput.getAttribute('data-img-url');
        document.getElementById('mainImage_' + clothesId).src = newImageSrc;

        // Get the selected color ID from the clicked color input
        const selectedColor = colorInput.getAttribute('data-color-id');

        // Target the size container for the current item
        const sizeContainer = document.getElementById('sizeContainer_' + clothesId);

        // Loop through each size option and toggle visibility based on color match
        Array.from(sizeContainer.getElementsByClassName('size-option')).forEach(function (sizeDiv) {
            if (sizeDiv.getAttribute('data-color') === selectedColor) {
                sizeDiv.style.display = 'block';  // Show matching sizes
            } else {
                sizeDiv.style.display = 'none';   // Hide non-matching sizes
            }
        });
    }

    // Function to toggle display for the size options
    function toggleDiv(element) {
        const insertDiv = element.closest('.card-body').querySelector('.insert');
        const sizesDiv = element.closest('.card-body').querySelector('.sizes');
        // Hide insert div and show sizes div
        insertDiv.style.display = 'none';
        sizesDiv.style.display = 'block';
    }

    // Hide sizes and show insert div when mouse leaves
    function hideSizes(element) {
        const insertDiv = element.querySelector('.insert');
        const sizesDiv = element.querySelector('.sizes');
        sizesDiv.style.display = 'none';
        insertDiv.style.display = 'block';
    }
</script>
<div style="height:2000px">
    <div class="banner">
        <img style="width:100%" src="https://placehold.co/2400x600" />
    </div>
    <div class="container" style="margin-top:100px">
        <div class="d-flex position-relative">
            <div class="position-absolute top-50 start-0 translate-middle-y bg-light">
                <i class="bi bi-arrow-left-short" style="font-size:30px; cursor:pointer" id="prevcl"></i>
            </div>
            <div class="d-flex justify-content-start">
                @foreach (var item in Model.clothingTypes)
                {
                    <a href="@Url.Action("GetClothesByType", "Clothes", new { idCate = item.CategoryID,  idType = item.ClothingTypeID})" class="category-item me-4">
                        <div class="card border-0 bg-light">
                            <img src="@item.UrlImg" alt="@item.CateCloTypeName" class="img-fluid" />
                            <div class="card-body text-center p-0">
                                <p class="card-title text-decoration-underline">@item.CateCloTypeName</p>
                            </div>
                        </div>
                    </a>
                }
            </div>
            <div class="position-absolute top-50 end-0 translate-middle-y bg-light">
                <i class="bi bi-arrow-right-short" style="font-size:30px; cursor:pointer;" id="nextcl"></i>
            </div>
        </div>
    </div>
    <div class="container" style="margin-top:100px">
        <div class="card border-0">
            <div class="card-header border-0 p-0">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Áo phông</h5>
                    </div>
                    <div>
                        <a class="#">
                            <h6>
                                Xem thêm
                                <span class="text-danger">>></span>
                            </h6>
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body p-0 bg-light">
                <div class="row">
                    <div class="col-4">
                        <img src="https://placehold.co/600x800" alt="Alternate Text" class="img-fluid rounded" />
                    </div>
                    <div class="col-8">
                        <div class="d-flex">
                            @*<div class="position-absolute top-50 start-0 translate-middle-y bg-light" style="z-index:1">
                                    <i class="bi bi-arrow-left-short" style="font-size:30px; cursor:pointer" id="prevpl"></i>
                                </div>*@
                            <div class="product-list d-flex overflow-hidden">
                                @foreach (var item in Model.clothes.Where(clo => clo.ClothesItem.ClothingTypeID == "CT001"))
                                {
                                    <div class="col-4 me-3">
                                        <div class="card border-0">
                                            <div class="card-body p-0 position-relative" onmouseleave="hideSizes(this)">
                                                <!-- Main image -->
                                                <a href="#">
                                                    <img id="mainImage_@item.ClothesItem.ClothesID" class="mainImage img-fluid rounded" src="@item.ClothesItem.UrlImage" alt="Product Image" onmouseenter="showInsert(this)">
                                                </a>
                                                <!-- Insert div -->
                                                <div class="insert bg-light text-center p-2 position-absolute bottom-0 start-50 translate-middle-x mb-3 rounded btn btn-light border-0 hover-overlay" style="width: 90%;" onclick="toggleDiv(this)">
                                                    Thêm vào giỏ hàng
                                                </div>
                                                <!-- Sizes div -->
                                                <div class="sizes bg-light text-center p-2 position-absolute bottom-0 start-50 translate-middle-x mb-3 rounded toggle-div" style="width: 90%; display: none;">
                                                    Thêm vào giỏ hàng
                                                    <div class="d-flex justify-content-center" id="sizeContainer_@item.ClothesItem.ClothesID">
                                                        @foreach (var size in item.Sizes)
                                                        {
                                                            var specificImages = (List<ClothesStore.Models.Clothes_Color_Size>)item.Clothes_Color_Sizes;
                                                            var colorID = specificImages.FirstOrDefault(clo => clo.SizeID == size.SizeID)?.ColorID;
                                                            <div class="btn bg-white m-2 size-option" data-color="@colorID">
                                                                @size.SizeName
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-footer border-0 p-0">
                                                <div class="d-flex flex-row mt-3 mb-2">
                                                    @foreach (var color in item.Colors)
                                                    {
                                                        var specificImages = (List<ClothesStore.Models.Image>)item.Images;
                                                        var imgUrl = specificImages.FirstOrDefault(img => img.ColorID == color.ColorID)?.UrlMainImg;
                                                        var imageWithOrderOne = specificImages.FirstOrDefault(img => img.ColorID == color.ColorID && img.ImageOrder == 1);
                                                        <div class="me-2">
                                                            <input type="radio" class="btn-check" name="color_@item.ClothesItem.ClothesID" id="@color.ColorID"
                                                                   autocomplete="off" onclick="changeImageAndSizes(this, '@item.ClothesItem.ClothesID')" data-color-id="@color.ColorID"
                                                                   data-img-url="@imgUrl"
                                                                   @(imageWithOrderOne != null ? "checked" : "")>
                                                            <label class="btn rounded-circle d-flex justify-content-center align-items-center" for="@color.ColorID" style="width: 20px; height: 25px;">
                                                                <img src="@color.UrlImage" alt="" class="rounded-circle" style="width: 20px; height: 20px;">
                                                            </label>
                                                        </div>
                                                    }
                                                </div>
                                                <div class="mb-2">
                                                    <a class="#" href="#">
                                                        <p class="card-text">@item.ClothesItem.ClothesName</p>
                                                    </a>
                                                </div>
                                                <div class="mb-2">
                                                    <span><strong>@item.ClothesItem.Price đ</strong></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            @*<div class="position-absolute top-50 end-0 translate-middle-y bg-light">
                                    <i class="bi bi-arrow-right-short" style="font-size:30px; cursor:pointer;" id="nextpl"></i>
                                </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card border-0">
            <div class="card-header border-0 p-0">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Áo phông</h5>
                    </div>
                    <div>
                        <a class="#">
                            <h6>
                                Xem thêm
                                <span class="text-danger">>></span>
                            </h6>
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body p-0 bg-light">
                <div class="row">
                    <div class="col-4">
                        <img src="https://placehold.co/600x800" alt="Alternate Text" class="img-fluid rounded" />
                    </div>
                    <div class="col-8">
                        <div class="d-flex position-relative">
                            @*<div class="position-absolute top-50 start-0 translate-middle-y bg-light" style="z-index:1">
                                    <i class="bi bi-arrow-left-short" style="font-size:30px; cursor:pointer" id="prevpl"></i>
                                </div>*@
                            <div class="product-list d-flex overflow-hidden">
                                @foreach (var item in Model.clothes.Where(clo => clo.ClothesItem.ClothingTypeID == "CT006"))
                                {
                                    <div class="col-4 me-3">
                                        <div class="card border-0">
                                            <div class="card-body p-0 position-relative" onmouseleave="hideSizes(this)">
                                                <!-- Main image -->
                                                <a href="#">
                                                    <img id="mainImage_@item.ClothesItem.ClothesID" class="mainImage img-fluid rounded" src="@item.ClothesItem.UrlImage" alt="Product Image" onmouseenter="showInsert(this)">
                                                </a>
                                                <!-- Insert div -->
                                                <div class="insert bg-light text-center p-2 position-absolute bottom-0 start-50 translate-middle-x mb-3 rounded btn btn-light border-0 hover-overlay" style="width: 90%;" onclick="toggleDiv(this)">
                                                    Thêm vào giỏ hàng
                                                </div>
                                                <!-- Sizes div -->
                                                <div class="sizes bg-light text-center p-2 position-absolute bottom-0 start-50 translate-middle-x mb-3 rounded toggle-div" style="width: 90%; display: none;">
                                                    Thêm vào giỏ hàng
                                                    <div class="d-flex justify-content-center" id="sizeContainer_@item.ClothesItem.ClothesID">
                                                        @foreach (var size in item.Sizes)
                                                        {
                                                            var specificImages = (List<ClothesStore.Models.Clothes_Color_Size>)item.Clothes_Color_Sizes;
                                                            var colorID = specificImages.FirstOrDefault(clo => clo.SizeID == size.SizeID)?.ColorID;

                                                            <div class="btn bg-white m-2 size-option" data-color="@colorID">
                                                                @size.SizeName
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-footer border-0 p-0">
                                                <div class="d-flex flex-row mt-3 mb-2">
                                                    @foreach (var color in item.Colors)
                                                    {
                                                        var specificImages = (List<ClothesStore.Models.Image>)item.Images;
                                                        var imgUrl = specificImages.FirstOrDefault(img => img.ColorID == color.ColorID)?.UrlMainImg;
                                                        var imageWithOrderOne = specificImages.FirstOrDefault(img => img.ColorID == color.ColorID && img.ImageOrder == 1);
                                                        <div class="me-2">
                                                            <input type="radio" class="btn-check" name="color_@item.ClothesItem.ClothesID" id="@color.ColorID"
                                                                   autocomplete="off" onclick="changeImageAndSizes(this, '@item.ClothesItem.ClothesID')" data-color-id="@color.ColorID"
                                                                   data-img-url="@imgUrl"
                                                                   @(imageWithOrderOne != null ? "checked" : "")>
                                                            <label class="btn rounded-circle d-flex justify-content-center align-items-center" for="@color.ColorID" style="width: 20px; height: 25px;">
                                                                <img src="@color.UrlImage" alt="" class="rounded-circle" style="width: 20px; height: 20px;">
                                                            </label>
                                                        </div>
                                                    }
                                                </div>
                                                <div class="mb-2">
                                                    <a class="#" href="#">
                                                        <p class="card-text">@item.ClothesItem.ClothesName</p>
                                                    </a>
                                                </div>
                                                <div class="mb-2">
                                                    <span><strong>@item.ClothesItem.Price đ</strong></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            @*<div class="position-absolute top-50 end-0 translate-middle-y bg-light">
                                    <i class="bi bi-arrow-right-short" style="font-size:30px; cursor:pointer;" id="nextpl"></i>
                                </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script>
    //$(document).ready(function () {
    //    //Sự kiện slick carousel - category
    //    $('.category-list').slick({
    //        infinite: true,          // Cuộn vô hạn
    //        slidesToShow: 8,         // Số mục hiển thị trên mỗi slide
    //        slidesToScroll: 3,       // Số mục cuộn mỗi lần
    //        prevArrow: '<i class="bi bi-arrow-left-short" style="font-size:30px; cursor:pointer;align-content:center" id="prevcl"></i>',
    //        nextArrow: '<i class="bi bi-arrow-right-short" style="font-size:30px; cursor:pointer;align-content:center;right:0" id="nextcl"></i>',
    //        autoplay: true,          // Tự động phát
    //        autoplaySpeed: 2000,     // Thời gian giữa các slide (ms)
    //        dots: true,              // Hiển thị dấu chấm điều hướng
    //        arrows: true,            // Hiển thị mũi tên điều hướng
    //    });
    //    //Sự kiện slick carousel - product
    //    $('.product-list').each(function () {
    //        $(this).slick({
    //            slidesToShow: 2.5,            // Hiển thị 2,5 slide
    //            slidesToScroll: 1,            // Cuộn 1 slide mỗi lần
    //            infinite: false,              // Không lặp lại vô hạn
    //            centerMode: false,            // Không căn giữa
    //            prevArrow: '<i class="bi bi-arrow-left-short" style="font-size:30px; cursor:pointer; position: absolute; z-index:1; top:50%" id="prevpl"></i>',
    //            nextArrow: '<i class="bi bi-arrow-right-short" style="font-size:30px; cursor:pointer; position: absolute;top:50%;right:0" id="nextpl"></i>',
    //            arrows: true,               // Hiển thị mũi tên điều hướng
    //        });
    //    });
    //});

</script>
