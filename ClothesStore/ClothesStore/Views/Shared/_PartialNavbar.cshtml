@{
    var userId = Session["UserId"] != null ? Session["UserId"].ToString() : string.Empty;
}
@using ClothesStore.Models

<nav class="navbar navbar-expand-lg">
    <div class="container p-0">
        <div class="navbar-brand ms-3">
            <a href="@Url.Action("Index", "Home")">
                <img src="~/Content/images/logo_2.png" alt="Logo" style="height: 40px;">
            </a>
        </div>
        <div class="collapse navbar-collapse">
            <ul class="navbar-nav">
                @Html.Action("_Category", "Home")
                <li class="nav-item">
                    <a href="#" class="nav-link text-uppercase fw-bold pb-2">
                        <span>Sản phẩm mới</span>
                    </a>
                </li>
            </ul>
        </div>
        <div class="d-flex flex-row me-3">
            <div class="m-auto me-3" id="searchBar">
                <input class="form-control p-0 ps-2" placeholder="Tìm kiếm">
            </div>
            <ul class="navbar-nav d-flex flex-row">
                <li class="nav-item dropdown custom-nav-item">
                    <a href="#" class="nav-link custom-nav-link p-0" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="true">
                        <i class="bi bi-person custom-icon"></i>
                        <span>
                            @if (Session["Username"] != null)
                            {
                                @Session["Username"]
                            }
                            else
                            {
                                <text>Tài khoản</text>
                            }
                        </span>
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                        @if (Session["Username"] != null)
                        {
                            <li>@Html.ActionLink("Profile", "Profile", "Account", null, new { @class = "dropdown-item" })</li>
                            <li><hr class="dropdown-divider"></li>
                            <li>@Html.ActionLink("Logout", "Logout", "Account", null, new { @class = "dropdown-item" })</li>
                        }
                        else
                        {
                            <li>@Html.ActionLink("Login", "Login", "Account", null, new { @class = "dropdown-item" })</li>
                        }
                    </ul>
                </li>
                <li class="nav-item custom-nav-item">
                    <a href="javascript:void(0);" class="nav-link custom-nav-link p-0 ms-2" data-bs-toggle="offcanvas" data-bs-target="#cartOffcanvas">
                        <i class="bi bi-cart2 custom-icon"></i>
                        <span>Giỏ hàng</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</nav>
@*Offcanvas giỏ hàng*@
<div class="offcanvas offcanvas-end" tabindex="-1" id="cartOffcanvas" aria-labelledby="cartOffcanvasLabel">
    <div class="offcanvas-header">
        <h5 id="cartOffcanvasLabel">Giỏ hàng của bạn</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        @if (ViewBag.CartDetails != null && Session["UserId"] != null && ((List<CartDetail>)ViewBag.CartDetails).Count > 0)
        {
            <ul class="list-group">
                @foreach (var item in (List<CartDetail>)ViewBag.CartDetails)
                {
                    var uniqueId = $"{item.ClothesID}_{item.ColorID}_{item.SizeName}";
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <img src="@item.MainImage" alt="@item.ClothesName" style="width: 150px; height: 150px; " class="me-2" />
                        <div>
                            <strong>@item.ClothesName</strong><br />
                            <strong>Kích cỡ: </strong>
                            <span>@item.SizeName</span><br />
                            <strong>Màu sắc:</strong>
                            <div class="color-options d-flex">
                                @if (ViewBag.Colors != null)
                                {
                                    foreach (var color in ViewBag.Colors)
                                    {
                                        if (color.ColorID == item.ColorID)
                                        {
                                            <div class="me-2">
                                                <img src="@color.UrlImage" alt="@color.ColorName" style="width: 20px; height: 20px; border-radius: 50%;">
                                            </div>
                                        }
                                    }
                                }
                            </div>
                            Giá: <span class="price">@item.Price.ToString("N0") ₫</span><br />
                            <div class="d-flex align-items-center">
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="updateQuantity('@uniqueId', -1, @item.Price)">-</button>
                                <input type="number" id="quantity_@uniqueId" value="@item.Quantity" class="form-control mx-2" style="width: 60px;" readonly />
                                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="updateQuantity('@uniqueId', 1, @item.Price)">+</button>
                            </div>
                            <strong>Tổng giá: <span id="total_@uniqueId">@item.TotalPrice ₫</span></strong>
                        </div>
                        <form action="@Url.Action("RemoveFromCart", "Cart")" method="post" style="display:inline;">
                            <input type="hidden" name="uniqueId" value="@uniqueId" />
                            <input type="hidden" name="userId" value="@userId" />
                        </form>
                    </li>
                }

            </ul>
            <div class="mt-3">
                @*<strong>Tổng giá giỏ hàng: <span id="totalCartPrice">@ViewBag.TotalAmount.ToString("N0") ₫</span></strong>*@
            </div>
            <a href="@Url.Action("Index", "Orders")" class="btn btn-success mt-3">Thanh toán</a>
        }
        else
        {
            <p>Chưa có sản phẩm nào trong giỏ hàng.</p>
        }

    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    var totalCartPrice = parseInt("@ViewBag.TotalAmount".replace(/\./g, ''));

    function updateQuantity(uniqueId, change, price) {
        var quantityInput = document.getElementById("quantity_" + uniqueId);
        var currentQuantity = parseInt(quantityInput.value);
        var newQuantity = currentQuantity + change;

        if (newQuantity < 0) {
            newQuantity = 0;
        }

        var originalQuantity = currentQuantity;  // Lưu số lượng ban đầu
        var originalTotalPrice = parseInt(document.getElementById("total_" + uniqueId).innerText.replace(/[^\d]/g, ''));  // Lưu tổng giá ban đầu

        quantityInput.value = newQuantity;

        if (newQuantity === 0) {
            if (confirm("Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng không?")) {
                $.ajax({
                    url: '@Url.Action("RemoveFromCart", "Cart")',
                    type: 'POST',
                    data: {
                        uniqueId: uniqueId
                    },
                    success: function(response) {
                        if (response.success) {
                            document.querySelector("li.list-group-item:has(#quantity_" + uniqueId + ")").remove();
                            updateTotalCartPrice();
                            alert("Sản phẩm đã được xóa");
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("Xóa không thành công:", error);
                    }
                });
                return;
            } else {
                quantityInput.value = originalQuantity;
                document.getElementById("total_" + uniqueId).innerText = originalTotalPrice.toLocaleString("vi-VN", { style: 'currency', currency: 'VND' });
                updateTotalCartPrice();  // Cập nhật lại tổng giá giỏ hàng để khớp với số lượng ban đầu
                return;
            }
        }

        var totalPriceElement = document.getElementById("total_" + uniqueId);
        var totalPrice = newQuantity * parseInt(price.toString().replace(/,/g, ''));
        totalPriceElement.innerText = totalPrice.toLocaleString("vi-VN", { style: 'currency', currency: 'VND' });

        var parts = uniqueId.split("_");
        $.ajax({
            url: '@Url.Action("UpdateCart", "Cart")',
            type: 'POST',
            data: {
                ClothesID: parts[0],
                ColorID: parts[1],
                SizeName: parts[2],
                Quantity: newQuantity
            },
            success: function(response) {
                // Cập nhật lại tổng giá
                updateTotalCartPrice();
            },
            error: function(xhr, status, error) {
                console.error("Cập nhật không thành công:", error);
            }
        });
    }


    function updateTotalCartPrice() {
        var total = 0;

        $(".list-group-item").each(function () {
            var quantity = parseInt($(this).find('input[type="number"]').val());

            // Lấy giá tiền và xử lý chuỗi để loại bỏ dấu phân cách, khoảng trắng và ký hiệu ₫
            var priceText = $(this).find('.price').text().trim();

            // Chuyển đổi chuỗi giá thành số, loại bỏ mọi ký tự không phải số
            var price = parseInt(priceText.replace(/[^\d]/g, ''));

            total += quantity * price;
        });

        // Định dạng lại tổng tiền và hiển thị, giữ nguyên 3 chữ số 0 cuối nếu cần
        var formattedTotal = total.toLocaleString('vi-VN', {
            style: 'currency',
            currency: 'VND',
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });

        $("#totalCartPrice").text(formattedTotal);
    }
</script>

@*<script>
    const targetLinks = document.querySelectorAll('.hover-item'); // Lấy các mục Nữ, Nam, Bé gái, Bé trai
    const outsideDiv = document.querySelector('.sub-menu'); // Thẻ div có class sub-menu

    function isAnyHovering() {
        // Kiểm tra nếu có bất kỳ mục nào đang được hover
        return Array.from(targetLinks).some(link => link.matches(':hover'));
    }

    targetLinks.forEach(targetLink => {
        targetLink.addEventListener('mouseenter', function () {
            outsideDiv.classList.add('show'); // Thêm class để hiển thị sub-menu khi hover
        });

        targetLink.addEventListener('mouseleave', function () {
            setTimeout(() => {
                // Nếu không hover vào sub-menu và không hover vào bất kỳ link nào
                if (!outsideDiv.matches(':hover') && !isAnyHovering()) {
                    outsideDiv.classList.remove('show'); // Xóa class show nếu không còn hover vào mục nào
                }
            }, 100);
        });
    });

    outsideDiv.addEventListener('mouseenter', function () {
        outsideDiv.classList.add('show'); // Giữ sub-menu mở khi hover vào
    });

    outsideDiv.addEventListener('mouseleave', function () {
        setTimeout(() => {
            // Nếu không hover vào sub-menu và không hover vào bất kỳ link nào
            if (!outsideDiv.matches(':hover') && !isAnyHovering()) {
                outsideDiv.classList.remove('show'); // Đóng sub-menu khi chuột rời đi
            }
        }, 100);
    });
</script>*@